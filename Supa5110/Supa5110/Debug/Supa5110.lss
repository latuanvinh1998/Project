
Supa5110.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000072e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000272  00800060  0000072e  000007c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  008002d2  008002d2  00000a34  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a34  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001817  00000000  00000000  00000b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000803  00000000  00000000  0000236f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007f5  00000000  00000000  00002b72  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e4  00000000  00000000  00003368  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005d0  00000000  00000000  0000364c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000df6  00000000  00000000  00003c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004a12  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	5c c0       	rjmp	.+184    	; 0xbc <__vector_1>
   4:	b8 c0       	rjmp	.+368    	; 0x176 <__vector_2>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>

00000026 <__ctors_start>:
  26:	19 01       	movw	r2, r18

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d4 e0       	ldi	r29, 0x04	; 4
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
  34:	12 e0       	ldi	r17, 0x02	; 2
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	ee e2       	ldi	r30, 0x2E	; 46
  3c:	f7 e0       	ldi	r31, 0x07	; 7
  3e:	02 c0       	rjmp	.+4      	; 0x44 <__SREG__+0x5>
  40:	05 90       	lpm	r0, Z+
  42:	0d 92       	st	X+, r0
  44:	a2 3d       	cpi	r26, 0xD2	; 210
  46:	b1 07       	cpc	r27, r17
  48:	d9 f7       	brne	.-10     	; 0x40 <__SREG__+0x1>

0000004a <__do_clear_bss>:
  4a:	22 e0       	ldi	r18, 0x02	; 2
  4c:	a2 ed       	ldi	r26, 0xD2	; 210
  4e:	b2 e0       	ldi	r27, 0x02	; 2
  50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
  52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
  54:	a9 3d       	cpi	r26, 0xD9	; 217
  56:	b2 07       	cpc	r27, r18
  58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>

0000005a <__do_global_ctors>:
  5a:	10 e0       	ldi	r17, 0x00	; 0
  5c:	c4 e1       	ldi	r28, 0x14	; 20
  5e:	d0 e0       	ldi	r29, 0x00	; 0
  60:	03 c0       	rjmp	.+6      	; 0x68 <__do_global_ctors+0xe>
  62:	21 97       	sbiw	r28, 0x01	; 1
  64:	fe 01       	movw	r30, r28
  66:	5b d3       	rcall	.+1718   	; 0x71e <__tablejump2__>
  68:	c3 31       	cpi	r28, 0x13	; 19
  6a:	d1 07       	cpc	r29, r17
  6c:	d1 f7       	brne	.-12     	; 0x62 <__do_global_ctors+0x8>
  6e:	02 d0       	rcall	.+4      	; 0x74 <main>
  70:	5c c3       	rjmp	.+1720   	; 0x72a <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <main>:
char data[10][14] = {"1.vinh20cm","2.vinhcuto","3.vinhcukhung","4.vinhbigdick","5.vinhkhoaito","6.vinhsex","7.thichdit","8.ditditdit","9.ditmemay","10.capdatmaan"};
Nokia5110 lcd;

int main(void)
{
	MCUCR|=(1<<ISC11)|(1<<ISC01);
  74:	85 b7       	in	r24, 0x35	; 53
  76:	8a 60       	ori	r24, 0x0A	; 10
  78:	85 bf       	out	0x35, r24	; 53
	GICR    |=(1<<INT1)|(1<<INT0);
  7a:	8b b7       	in	r24, 0x3b	; 59
  7c:	80 6c       	ori	r24, 0xC0	; 192
  7e:	8b bf       	out	0x3b, r24	; 59
	sei();
  80:	78 94       	sei
	DDRC |= (1 << 5);
  82:	a5 9a       	sbi	0x14, 5	; 20
	PORTC |= (1 << 5);
  84:	ad 9a       	sbi	0x15, 5	; 21
	lcd.begin();
  86:	82 ed       	ldi	r24, 0xD2	; 210
  88:	92 e0       	ldi	r25, 0x02	; 2
  8a:	35 d1       	rcall	.+618    	; 0x2f6 <_ZN9Nokia51105beginEv>
	lcd.setCursor(0, 0);
  8c:	40 e0       	ldi	r20, 0x00	; 0
  8e:	60 e0       	ldi	r22, 0x00	; 0
  90:	82 ed       	ldi	r24, 0xD2	; 210
  92:	92 e0       	ldi	r25, 0x02	; 2
  94:	f9 d0       	rcall	.+498    	; 0x288 <_ZN9Nokia51109setCursorEhh>
	lcd.fillUp("LIST:");
  96:	6c ee       	ldi	r22, 0xEC	; 236
  98:	70 e0       	ldi	r23, 0x00	; 0
  9a:	82 ed       	ldi	r24, 0xD2	; 210
  9c:	92 e0       	ldi	r25, 0x02	; 2
  9e:	72 d1       	rcall	.+740    	; 0x384 <_ZN9Nokia51106fillUpEPc>
	lcd.PrintArray(data, x, select);
  a0:	20 91 d5 02 	lds	r18, 0x02D5	; 0x8002d5 <select>
  a4:	30 91 d6 02 	lds	r19, 0x02D6	; 0x8002d6 <select+0x1>
  a8:	40 91 d7 02 	lds	r20, 0x02D7	; 0x8002d7 <x>
  ac:	50 91 d8 02 	lds	r21, 0x02D8	; 0x8002d8 <x+0x1>
  b0:	60 e6       	ldi	r22, 0x60	; 96
  b2:	70 e0       	ldi	r23, 0x00	; 0
  b4:	82 ed       	ldi	r24, 0xD2	; 210
  b6:	92 e0       	ldi	r25, 0x02	; 2
  b8:	26 d2       	rcall	.+1100   	; 0x506 <_ZN9Nokia511010PrintArrayEPA14_cii>
  ba:	ff cf       	rjmp	.-2      	; 0xba <main+0x46>

000000bc <__vector_1>:
	while(1){
	}
}
ISR(INT0_vect){
  bc:	1f 92       	push	r1
  be:	0f 92       	push	r0
  c0:	0f b6       	in	r0, 0x3f	; 63
  c2:	0f 92       	push	r0
  c4:	11 24       	eor	r1, r1
  c6:	2f 93       	push	r18
  c8:	3f 93       	push	r19
  ca:	4f 93       	push	r20
  cc:	5f 93       	push	r21
  ce:	6f 93       	push	r22
  d0:	7f 93       	push	r23
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
  d6:	af 93       	push	r26
  d8:	bf 93       	push	r27
  da:	ef 93       	push	r30
  dc:	ff 93       	push	r31
	if(select < 5)
  de:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <select>
  e2:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <select+0x1>
  e6:	05 97       	sbiw	r24, 0x05	; 5
  e8:	54 f4       	brge	.+20     	; 0xfe <__vector_1+0x42>
		select++;
  ea:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <select>
  ee:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <select+0x1>
  f2:	01 96       	adiw	r24, 0x01	; 1
  f4:	90 93 d6 02 	sts	0x02D6, r25	; 0x8002d6 <select+0x1>
  f8:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <select>
  fc:	15 c0       	rjmp	.+42     	; 0x128 <__vector_1+0x6c>
	else if(select == 5)
  fe:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <select>
 102:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <select+0x1>
 106:	05 97       	sbiw	r24, 0x05	; 5
 108:	79 f4       	brne	.+30     	; 0x128 <__vector_1+0x6c>
	{
		if (x < 5)
 10a:	80 91 d7 02 	lds	r24, 0x02D7	; 0x8002d7 <x>
 10e:	90 91 d8 02 	lds	r25, 0x02D8	; 0x8002d8 <x+0x1>
 112:	05 97       	sbiw	r24, 0x05	; 5
 114:	4c f4       	brge	.+18     	; 0x128 <__vector_1+0x6c>
		x++;
 116:	80 91 d7 02 	lds	r24, 0x02D7	; 0x8002d7 <x>
 11a:	90 91 d8 02 	lds	r25, 0x02D8	; 0x8002d8 <x+0x1>
 11e:	01 96       	adiw	r24, 0x01	; 1
 120:	90 93 d8 02 	sts	0x02D8, r25	; 0x8002d8 <x+0x1>
 124:	80 93 d7 02 	sts	0x02D7, r24	; 0x8002d7 <x>
	}
	lcd.PrintArray(data, x, select);
 128:	20 91 d5 02 	lds	r18, 0x02D5	; 0x8002d5 <select>
 12c:	30 91 d6 02 	lds	r19, 0x02D6	; 0x8002d6 <select+0x1>
 130:	40 91 d7 02 	lds	r20, 0x02D7	; 0x8002d7 <x>
 134:	50 91 d8 02 	lds	r21, 0x02D8	; 0x8002d8 <x+0x1>
 138:	60 e6       	ldi	r22, 0x60	; 96
 13a:	70 e0       	ldi	r23, 0x00	; 0
 13c:	82 ed       	ldi	r24, 0xD2	; 210
 13e:	92 e0       	ldi	r25, 0x02	; 2
 140:	e2 d1       	rcall	.+964    	; 0x506 <_ZN9Nokia511010PrintArrayEPA14_cii>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 142:	2f ef       	ldi	r18, 0xFF	; 255
 144:	89 e6       	ldi	r24, 0x69	; 105
 146:	98 e1       	ldi	r25, 0x18	; 24
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	80 40       	sbci	r24, 0x00	; 0
 14c:	90 40       	sbci	r25, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <__vector_1+0x8c>
 150:	00 c0       	rjmp	.+0      	; 0x152 <__vector_1+0x96>
 152:	00 00       	nop
	_delay_ms(1000);
}
 154:	ff 91       	pop	r31
 156:	ef 91       	pop	r30
 158:	bf 91       	pop	r27
 15a:	af 91       	pop	r26
 15c:	9f 91       	pop	r25
 15e:	8f 91       	pop	r24
 160:	7f 91       	pop	r23
 162:	6f 91       	pop	r22
 164:	5f 91       	pop	r21
 166:	4f 91       	pop	r20
 168:	3f 91       	pop	r19
 16a:	2f 91       	pop	r18
 16c:	0f 90       	pop	r0
 16e:	0f be       	out	0x3f, r0	; 63
 170:	0f 90       	pop	r0
 172:	1f 90       	pop	r1
 174:	18 95       	reti

00000176 <__vector_2>:
ISR(INT1_vect){
 176:	1f 92       	push	r1
 178:	0f 92       	push	r0
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	0f 92       	push	r0
 17e:	11 24       	eor	r1, r1
 180:	2f 93       	push	r18
 182:	3f 93       	push	r19
 184:	4f 93       	push	r20
 186:	5f 93       	push	r21
 188:	6f 93       	push	r22
 18a:	7f 93       	push	r23
 18c:	8f 93       	push	r24
 18e:	9f 93       	push	r25
 190:	af 93       	push	r26
 192:	bf 93       	push	r27
 194:	ef 93       	push	r30
 196:	ff 93       	push	r31
	if(select > 1)
 198:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <select>
 19c:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <select+0x1>
 1a0:	02 97       	sbiw	r24, 0x02	; 2
 1a2:	54 f0       	brlt	.+20     	; 0x1b8 <__vector_2+0x42>
		select--;
 1a4:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <select>
 1a8:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <select+0x1>
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	90 93 d6 02 	sts	0x02D6, r25	; 0x8002d6 <select+0x1>
 1b2:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <select>
 1b6:	16 c0       	rjmp	.+44     	; 0x1e4 <__vector_2+0x6e>
	else if(select == 1)
 1b8:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <select>
 1bc:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <select+0x1>
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	81 f4       	brne	.+32     	; 0x1e4 <__vector_2+0x6e>
	{
		if(x > 0)
 1c4:	80 91 d7 02 	lds	r24, 0x02D7	; 0x8002d7 <x>
 1c8:	90 91 d8 02 	lds	r25, 0x02D8	; 0x8002d8 <x+0x1>
 1cc:	18 16       	cp	r1, r24
 1ce:	19 06       	cpc	r1, r25
 1d0:	4c f4       	brge	.+18     	; 0x1e4 <__vector_2+0x6e>
		x--;
 1d2:	80 91 d7 02 	lds	r24, 0x02D7	; 0x8002d7 <x>
 1d6:	90 91 d8 02 	lds	r25, 0x02D8	; 0x8002d8 <x+0x1>
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	90 93 d8 02 	sts	0x02D8, r25	; 0x8002d8 <x+0x1>
 1e0:	80 93 d7 02 	sts	0x02D7, r24	; 0x8002d7 <x>
	}
	lcd.PrintArray(data, x, select);
 1e4:	20 91 d5 02 	lds	r18, 0x02D5	; 0x8002d5 <select>
 1e8:	30 91 d6 02 	lds	r19, 0x02D6	; 0x8002d6 <select+0x1>
 1ec:	40 91 d7 02 	lds	r20, 0x02D7	; 0x8002d7 <x>
 1f0:	50 91 d8 02 	lds	r21, 0x02D8	; 0x8002d8 <x+0x1>
 1f4:	60 e6       	ldi	r22, 0x60	; 96
 1f6:	70 e0       	ldi	r23, 0x00	; 0
 1f8:	82 ed       	ldi	r24, 0xD2	; 210
 1fa:	92 e0       	ldi	r25, 0x02	; 2
 1fc:	84 d1       	rcall	.+776    	; 0x506 <_ZN9Nokia511010PrintArrayEPA14_cii>
 1fe:	2f ef       	ldi	r18, 0xFF	; 255
 200:	89 e6       	ldi	r24, 0x69	; 105
 202:	98 e1       	ldi	r25, 0x18	; 24
 204:	21 50       	subi	r18, 0x01	; 1
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	e1 f7       	brne	.-8      	; 0x204 <__vector_2+0x8e>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <__vector_2+0x98>
 20e:	00 00       	nop
	_delay_ms(1000);
 210:	ff 91       	pop	r31
 212:	ef 91       	pop	r30
 214:	bf 91       	pop	r27
 216:	af 91       	pop	r26
 218:	9f 91       	pop	r25
 21a:	8f 91       	pop	r24
 21c:	7f 91       	pop	r23
 21e:	6f 91       	pop	r22
 220:	5f 91       	pop	r21
 222:	4f 91       	pop	r20
 224:	3f 91       	pop	r19
 226:	2f 91       	pop	r18
 228:	0f 90       	pop	r0
 22a:	0f be       	out	0x3f, r0	; 63
 22c:	0f 90       	pop	r0
 22e:	1f 90       	pop	r1
 230:	18 95       	reti

00000232 <_GLOBAL__sub_I_x>:
#include <string.h>
#include <avr/sfr_defs.h>
#include <avr/interrupt.h>
volatile int x = 0, select = 0;
char data[10][14] = {"1.vinh20cm","2.vinhcuto","3.vinhcukhung","4.vinhbigdick","5.vinhkhoaito","6.vinhsex","7.thichdit","8.ditditdit","9.ditmemay","10.capdatmaan"};
Nokia5110 lcd;
 232:	82 ed       	ldi	r24, 0xD2	; 210
 234:	92 e0       	ldi	r25, 0x02	; 2
 236:	3a d0       	rcall	.+116    	; 0x2ac <_ZN9Nokia5110C1Ev>
 238:	08 95       	ret

0000023a <_ZN9Nokia51104sendEih>:
#include "N5110.h"
void Nokia5110::send(int type, uint8_t data){
	LCD_PORT &= ~(1 << SCE);
 23a:	c2 98       	cbi	0x18, 2	; 24
	
	if (type)
 23c:	67 2b       	or	r22, r23
 23e:	11 f0       	breq	.+4      	; 0x244 <_ZN9Nokia51104sendEih+0xa>
	LCD_PORT |= (1 << DC);
 240:	c6 9a       	sbi	0x18, 6	; 24
 242:	14 c0       	rjmp	.+40     	; 0x26c <_ZN9Nokia51104sendEih+0x32>
	else
	LCD_PORT &= ~(1 << DC );
 244:	c6 98       	cbi	0x18, 6	; 24
 246:	12 c0       	rjmp	.+36     	; 0x26c <_ZN9Nokia51104sendEih+0x32>
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7 - i)) & 0x01)
 248:	9a 01       	movw	r18, r20
 24a:	08 2e       	mov	r0, r24
 24c:	02 c0       	rjmp	.+4      	; 0x252 <_ZN9Nokia51104sendEih+0x18>
 24e:	35 95       	asr	r19
 250:	27 95       	ror	r18
 252:	0a 94       	dec	r0
 254:	e2 f7       	brpl	.-8      	; 0x24e <_ZN9Nokia51104sendEih+0x14>
 256:	20 ff       	sbrs	r18, 0
 258:	02 c0       	rjmp	.+4      	; 0x25e <_ZN9Nokia51104sendEih+0x24>
		LCD_PORT |= (1 << SDIN);
 25a:	c3 9a       	sbi	0x18, 3	; 24
 25c:	01 c0       	rjmp	.+2      	; 0x260 <_ZN9Nokia51104sendEih+0x26>
		else
		LCD_PORT &= ~(1 << SDIN);
 25e:	c3 98       	cbi	0x18, 3	; 24
		
		LCD_PORT |= (1 << SCLK);
 260:	c5 9a       	sbi	0x18, 5	; 24
		LCD_PORT &= ~(1 << SCLK);
 262:	c5 98       	cbi	0x18, 5	; 24
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	80 f7       	brcc	.-32     	; 0x248 <_ZN9Nokia51104sendEih+0xe>
	}
	
	LCD_PORT |= (1 << SCE);
 268:	c2 9a       	sbi	0x18, 2	; 24
}
 26a:	08 95       	ret
#include "N5110.h"
void Nokia5110::send(int type, uint8_t data){
 26c:	87 e0       	ldi	r24, 0x07	; 7
 26e:	90 e0       	ldi	r25, 0x00	; 0
	LCD_PORT |= (1 << DC);
	else
	LCD_PORT &= ~(1 << DC );
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7 - i)) & 0x01)
 270:	50 e0       	ldi	r21, 0x00	; 0
 272:	ea cf       	rjmp	.-44     	; 0x248 <_ZN9Nokia51104sendEih+0xe>

00000274 <_ZN9Nokia511011sendCommandEh>:
	}
	
	LCD_PORT |= (1 << SCE);
}

void Nokia5110::sendCommand(uint8_t cmd){
 274:	46 2f       	mov	r20, r22
	send(PCD8544_cmd, cmd);
 276:	60 e0       	ldi	r22, 0x00	; 0
 278:	70 e0       	ldi	r23, 0x00	; 0
 27a:	df df       	rcall	.-66     	; 0x23a <_ZN9Nokia51104sendEih>
 27c:	08 95       	ret

0000027e <_ZN9Nokia51108sendDataEh>:
}
void Nokia5110::sendData(uint8_t data){
 27e:	46 2f       	mov	r20, r22
	send(PCD8544_data, data);
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	da df       	rcall	.-76     	; 0x23a <_ZN9Nokia51104sendEih>
 286:	08 95       	ret

00000288 <_ZN9Nokia51109setCursorEhh>:
}

void Nokia5110::setCursor(uint8_t x, uint8_t y){
 288:	cf 93       	push	r28
 28a:	df 93       	push	r29
 28c:	ec 01       	movw	r28, r24
	this->cursor_x = x;
 28e:	68 83       	st	Y, r22
	this->cursor_y = y;
 290:	49 83       	std	Y+1, r20	; 0x01
	sendCommand(0x20);
 292:	60 e2       	ldi	r22, 0x20	; 32
 294:	ef df       	rcall	.-34     	; 0x274 <_ZN9Nokia511011sendCommandEh>
	sendCommand(0x80 | this->cursor_x);
 296:	68 81       	ld	r22, Y
 298:	60 68       	ori	r22, 0x80	; 128
 29a:	ce 01       	movw	r24, r28
 29c:	eb df       	rcall	.-42     	; 0x274 <_ZN9Nokia511011sendCommandEh>
	sendCommand(0x40 | this->cursor_y);
 29e:	69 81       	ldd	r22, Y+1	; 0x01
 2a0:	60 64       	ori	r22, 0x40	; 64
 2a2:	ce 01       	movw	r24, r28
 2a4:	e7 df       	rcall	.-50     	; 0x274 <_ZN9Nokia511011sendCommandEh>
}
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	08 95       	ret

000002ac <_ZN9Nokia5110C1Ev>:
Nokia5110::Nokia5110(){
 2ac:	fc 01       	movw	r30, r24
	this->cursor_x = 0;
 2ae:	10 82       	st	Z, r1
	this->cursor_y = 0;
 2b0:	11 82       	std	Z+1, r1	; 0x01
	this->inverse_output = false;
 2b2:	12 82       	std	Z+2, r1	; 0x02
	LCD_DDR |= (1 << RST) | (1 << SCE) | (1 << DC) | (1 << SDIN) | (1 << SCLK);
 2b4:	87 b3       	in	r24, 0x17	; 23
 2b6:	8e 66       	ori	r24, 0x6E	; 110
 2b8:	87 bb       	out	0x17, r24	; 23
	LCD_PORT |= (1 << RST) | (1 << SCE);
 2ba:	88 b3       	in	r24, 0x18	; 24
 2bc:	86 60       	ori	r24, 0x06	; 6
 2be:	88 bb       	out	0x18, r24	; 24
 2c0:	08 95       	ret

000002c2 <_ZN9Nokia51105resetEv>:
}

void Nokia5110::reset(){
	LCD_PORT |= (1 << RST) | (1 << SCE);
 2c2:	88 b3       	in	r24, 0x18	; 24
 2c4:	86 60       	ori	r24, 0x06	; 6
 2c6:	88 bb       	out	0x18, r24	; 24
	
	LCD_PORT &= ~(1 << RST);
 2c8:	c1 98       	cbi	0x18, 1	; 24
	LCD_PORT |= (1 << RST);
 2ca:	c1 9a       	sbi	0x18, 1	; 24
 2cc:	08 95       	ret

000002ce <_ZN9Nokia511010clearSreenEv>:
}

void Nokia5110::clearSreen(){
 2ce:	0f 93       	push	r16
 2d0:	1f 93       	push	r17
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	8c 01       	movw	r16, r24
	setCursor(0, 0);
 2d8:	40 e0       	ldi	r20, 0x00	; 0
 2da:	60 e0       	ldi	r22, 0x00	; 0
 2dc:	d5 df       	rcall	.-86     	; 0x288 <_ZN9Nokia51109setCursorEhh>
 2de:	c8 ef       	ldi	r28, 0xF8	; 248
 2e0:	d1 e0       	ldi	r29, 0x01	; 1
	for (int i = 0; i < 504; i++)
	sendData(0x00);
 2e2:	60 e0       	ldi	r22, 0x00	; 0
 2e4:	c8 01       	movw	r24, r16
 2e6:	cb df       	rcall	.-106    	; 0x27e <_ZN9Nokia51108sendDataEh>
 2e8:	21 97       	sbiw	r28, 0x01	; 1
	LCD_PORT |= (1 << RST);
}

void Nokia5110::clearSreen(){
	setCursor(0, 0);
	for (int i = 0; i < 504; i++)
 2ea:	d9 f7       	brne	.-10     	; 0x2e2 <_ZN9Nokia511010clearSreenEv+0x14>
	sendData(0x00);
}
 2ec:	df 91       	pop	r29
 2ee:	cf 91       	pop	r28
 2f0:	1f 91       	pop	r17
 2f2:	0f 91       	pop	r16
 2f4:	08 95       	ret

000002f6 <_ZN9Nokia51105beginEv>:

void Nokia5110::begin(){
 2f6:	cf 93       	push	r28
 2f8:	df 93       	push	r29
 2fa:	ec 01       	movw	r28, r24
	this->reset();
 2fc:	e2 df       	rcall	.-60     	; 0x2c2 <_ZN9Nokia51105resetEv>
	
	this->sendCommand(0x21); // H = 1
 2fe:	61 e2       	ldi	r22, 0x21	; 33
 300:	ce 01       	movw	r24, r28
 302:	b8 df       	rcall	.-144    	; 0x274 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x80 | 0x10); //VOP[6:0] = (VLCD - 3,06) / 0.06           
 304:	60 e9       	ldi	r22, 0x90	; 144
 306:	ce 01       	movw	r24, r28
 308:	b5 df       	rcall	.-150    	; 0x274 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x04); // TC0
 30a:	64 e0       	ldi	r22, 0x04	; 4
 30c:	ce 01       	movw	r24, r28
 30e:	b2 df       	rcall	.-156    	; 0x274 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x14); // Bias 1:40 - 1:34
 310:	64 e1       	ldi	r22, 0x14	; 20
 312:	ce 01       	movw	r24, r28
 314:	af df       	rcall	.-162    	; 0x274 <_ZN9Nokia511011sendCommandEh>
	
	this->sendCommand(0x20); //H = 0
 316:	60 e2       	ldi	r22, 0x20	; 32
 318:	ce 01       	movw	r24, r28
 31a:	ac df       	rcall	.-168    	; 0x274 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x80);
 31c:	60 e8       	ldi	r22, 0x80	; 128
 31e:	ce 01       	movw	r24, r28
 320:	a9 df       	rcall	.-174    	; 0x274 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x40);
 322:	60 e4       	ldi	r22, 0x40	; 64
 324:	ce 01       	movw	r24, r28
 326:	a6 df       	rcall	.-180    	; 0x274 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x0C); //Normal Mode
 328:	6c e0       	ldi	r22, 0x0C	; 12
 32a:	ce 01       	movw	r24, r28
 32c:	a3 df       	rcall	.-186    	; 0x274 <_ZN9Nokia511011sendCommandEh>
	
	this->clearSreen();
 32e:	ce 01       	movw	r24, r28
 330:	ce df       	rcall	.-100    	; 0x2ce <_ZN9Nokia511010clearSreenEv>
}
 332:	df 91       	pop	r29
 334:	cf 91       	pop	r28
 336:	08 95       	ret

00000338 <_ZN9Nokia51108sendCharEc>:
		}
		z++;
	}
}
void Nokia5110::sendChar(char data)
{
 338:	ef 92       	push	r14
 33a:	ff 92       	push	r15
 33c:	0f 93       	push	r16
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	7c 01       	movw	r14, r24
 346:	70 e0       	ldi	r23, 0x00	; 0
 348:	eb 01       	movw	r28, r22
 34a:	cc 0f       	add	r28, r28
 34c:	dd 1f       	adc	r29, r29
 34e:	cc 0f       	add	r28, r28
 350:	dd 1f       	adc	r29, r29
 352:	6c 0f       	add	r22, r28
 354:	7d 1f       	adc	r23, r29
 356:	eb 01       	movw	r28, r22
 358:	ce 5a       	subi	r28, 0xAE	; 174
 35a:	df 4f       	sbci	r29, 0xFF	; 255
	for(int i = 0; i < 5; i++)
 35c:	00 e0       	ldi	r16, 0x00	; 0
 35e:	10 e0       	ldi	r17, 0x00	; 0
	{
		this->sendData(CHARSET[int(data) - 0x20][i]);
 360:	69 91       	ld	r22, Y+
 362:	c7 01       	movw	r24, r14
 364:	8c df       	rcall	.-232    	; 0x27e <_ZN9Nokia51108sendDataEh>
		z++;
	}
}
void Nokia5110::sendChar(char data)
{
	for(int i = 0; i < 5; i++)
 366:	0f 5f       	subi	r16, 0xFF	; 255
 368:	1f 4f       	sbci	r17, 0xFF	; 255
 36a:	05 30       	cpi	r16, 0x05	; 5
 36c:	11 05       	cpc	r17, r1
 36e:	c1 f7       	brne	.-16     	; 0x360 <_ZN9Nokia51108sendCharEc+0x28>
	{
		this->sendData(CHARSET[int(data) - 0x20][i]);
	}
	this->sendData(0x00);
 370:	60 e0       	ldi	r22, 0x00	; 0
 372:	c7 01       	movw	r24, r14
 374:	84 df       	rcall	.-248    	; 0x27e <_ZN9Nokia51108sendDataEh>
}
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	1f 91       	pop	r17
 37c:	0f 91       	pop	r16
 37e:	ff 90       	pop	r15
 380:	ef 90       	pop	r14
 382:	08 95       	ret

00000384 <_ZN9Nokia51106fillUpEPc>:
	this->sendCommand(0x0C); //Normal Mode
	
	this->clearSreen();
}

void Nokia5110::fillUp(char *data){
 384:	cf 92       	push	r12
 386:	df 92       	push	r13
 388:	ef 92       	push	r14
 38a:	ff 92       	push	r15
 38c:	0f 93       	push	r16
 38e:	1f 93       	push	r17
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	7c 01       	movw	r14, r24
	register int i = 0;
	int length = 0;
	while (data[i]){
 396:	fb 01       	movw	r30, r22
 398:	80 81       	ld	r24, Z
 39a:	81 11       	cpse	r24, r1
 39c:	05 c0       	rjmp	.+10     	; 0x3a8 <_ZN9Nokia51106fillUpEPc+0x24>
 39e:	2a c0       	rjmp	.+84     	; 0x3f4 <_ZN9Nokia51106fillUpEPc+0x70>
		length++;
		i++;
	}
	for (i = 0; i < length; i++){
 3a0:	10 16       	cp	r1, r16
 3a2:	11 06       	cpc	r1, r17
 3a4:	e4 f0       	brlt	.+56     	; 0x3de <_ZN9Nokia51106fillUpEPc+0x5a>
 3a6:	0a c0       	rjmp	.+20     	; 0x3bc <_ZN9Nokia51106fillUpEPc+0x38>
 3a8:	fb 01       	movw	r30, r22
 3aa:	31 96       	adiw	r30, 0x01	; 1
}

void Nokia5110::fillUp(char *data){
	register int i = 0;
	int length = 0;
	while (data[i]){
 3ac:	00 e0       	ldi	r16, 0x00	; 0
 3ae:	10 e0       	ldi	r17, 0x00	; 0
		length++;
 3b0:	0f 5f       	subi	r16, 0xFF	; 255
 3b2:	1f 4f       	sbci	r17, 0xFF	; 255
}

void Nokia5110::fillUp(char *data){
	register int i = 0;
	int length = 0;
	while (data[i]){
 3b4:	81 91       	ld	r24, Z+
 3b6:	81 11       	cpse	r24, r1
 3b8:	fb cf       	rjmp	.-10     	; 0x3b0 <_ZN9Nokia51106fillUpEPc+0x2c>
 3ba:	f2 cf       	rjmp	.-28     	; 0x3a0 <_ZN9Nokia51106fillUpEPc+0x1c>
		i++;
	}
	for (i = 0; i < length; i++){
		this->sendChar(data[i]);
	}
	for (i = 0; i < (14-length)*6; i++){
 3bc:	8e e0       	ldi	r24, 0x0E	; 14
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	9c 01       	movw	r18, r24
 3c2:	20 1b       	sub	r18, r16
 3c4:	31 0b       	sbc	r19, r17
 3c6:	89 01       	movw	r16, r18
 3c8:	c9 01       	movw	r24, r18
 3ca:	88 0f       	add	r24, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	08 0f       	add	r16, r24
 3d0:	19 1f       	adc	r17, r25
 3d2:	00 0f       	add	r16, r16
 3d4:	11 1f       	adc	r17, r17
 3d6:	10 16       	cp	r1, r16
 3d8:	11 06       	cpc	r1, r17
 3da:	74 f0       	brlt	.+28     	; 0x3f8 <_ZN9Nokia51106fillUpEPc+0x74>
 3dc:	16 c0       	rjmp	.+44     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3de:	eb 01       	movw	r28, r22
 3e0:	6b 01       	movw	r12, r22
 3e2:	c0 0e       	add	r12, r16
 3e4:	d1 1e       	adc	r13, r17
	while (data[i]){
		length++;
		i++;
	}
	for (i = 0; i < length; i++){
		this->sendChar(data[i]);
 3e6:	69 91       	ld	r22, Y+
 3e8:	c7 01       	movw	r24, r14
 3ea:	a6 df       	rcall	.-180    	; 0x338 <_ZN9Nokia51108sendCharEc>
	int length = 0;
	while (data[i]){
		length++;
		i++;
	}
	for (i = 0; i < length; i++){
 3ec:	cc 16       	cp	r12, r28
 3ee:	dd 06       	cpc	r13, r29
 3f0:	d1 f7       	brne	.-12     	; 0x3e6 <_ZN9Nokia51106fillUpEPc+0x62>
 3f2:	e4 cf       	rjmp	.-56     	; 0x3bc <_ZN9Nokia51106fillUpEPc+0x38>
		this->sendChar(data[i]);
	}
	for (i = 0; i < (14-length)*6; i++){
 3f4:	04 e5       	ldi	r16, 0x54	; 84
 3f6:	10 e0       	ldi	r17, 0x00	; 0
 3f8:	c0 e0       	ldi	r28, 0x00	; 0
 3fa:	d0 e0       	ldi	r29, 0x00	; 0
		this->sendData(0x00);
 3fc:	60 e0       	ldi	r22, 0x00	; 0
 3fe:	c7 01       	movw	r24, r14
 400:	3e df       	rcall	.-388    	; 0x27e <_ZN9Nokia51108sendDataEh>
		i++;
	}
	for (i = 0; i < length; i++){
		this->sendChar(data[i]);
	}
	for (i = 0; i < (14-length)*6; i++){
 402:	21 96       	adiw	r28, 0x01	; 1
 404:	0c 17       	cp	r16, r28
 406:	1d 07       	cpc	r17, r29
 408:	c9 f7       	brne	.-14     	; 0x3fc <_ZN9Nokia51106fillUpEPc+0x78>
		this->sendData(0x00);
	}
}
 40a:	df 91       	pop	r29
 40c:	cf 91       	pop	r28
 40e:	1f 91       	pop	r17
 410:	0f 91       	pop	r16
 412:	ff 90       	pop	r15
 414:	ef 90       	pop	r14
 416:	df 90       	pop	r13
 418:	cf 90       	pop	r12
 41a:	08 95       	ret

0000041c <_ZN9Nokia511015reversesendCharEc>:
		this->sendData(CHARSET[int(data) - 0x20][i]);
	}
	this->sendData(0x00);
}
void Nokia5110::reversesendChar(char data)
{
 41c:	ef 92       	push	r14
 41e:	ff 92       	push	r15
 420:	0f 93       	push	r16
 422:	1f 93       	push	r17
 424:	cf 93       	push	r28
 426:	df 93       	push	r29
 428:	8c 01       	movw	r16, r24
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	eb 01       	movw	r28, r22
 42e:	cc 0f       	add	r28, r28
 430:	dd 1f       	adc	r29, r29
 432:	cc 0f       	add	r28, r28
 434:	dd 1f       	adc	r29, r29
 436:	6c 0f       	add	r22, r28
 438:	7d 1f       	adc	r23, r29
 43a:	eb 01       	movw	r28, r22
 43c:	ce 5a       	subi	r28, 0xAE	; 174
 43e:	df 4f       	sbci	r29, 0xFF	; 255
	for(int i = 0; i < 5; i++)
 440:	e1 2c       	mov	r14, r1
 442:	f1 2c       	mov	r15, r1
	{
		this->sendData(0xFF^CHARSET[int(data) - 0x20][i]);
 444:	69 91       	ld	r22, Y+
 446:	60 95       	com	r22
 448:	c8 01       	movw	r24, r16
 44a:	19 df       	rcall	.-462    	; 0x27e <_ZN9Nokia51108sendDataEh>
	}
	this->sendData(0x00);
}
void Nokia5110::reversesendChar(char data)
{
	for(int i = 0; i < 5; i++)
 44c:	8f ef       	ldi	r24, 0xFF	; 255
 44e:	e8 1a       	sub	r14, r24
 450:	f8 0a       	sbc	r15, r24
 452:	85 e0       	ldi	r24, 0x05	; 5
 454:	e8 16       	cp	r14, r24
 456:	f1 04       	cpc	r15, r1
 458:	a9 f7       	brne	.-22     	; 0x444 <_ZN9Nokia511015reversesendCharEc+0x28>
	{
		this->sendData(0xFF^CHARSET[int(data) - 0x20][i]);
	}
	this->sendData(0xFF);
 45a:	6f ef       	ldi	r22, 0xFF	; 255
 45c:	c8 01       	movw	r24, r16
 45e:	0f df       	rcall	.-482    	; 0x27e <_ZN9Nokia51108sendDataEh>
}
 460:	df 91       	pop	r29
 462:	cf 91       	pop	r28
 464:	1f 91       	pop	r17
 466:	0f 91       	pop	r16
 468:	ff 90       	pop	r15
 46a:	ef 90       	pop	r14
 46c:	08 95       	ret

0000046e <_ZN9Nokia51107reverseEPc>:
	for (i = 0; i < (14-length)*6; i++){
		this->sendData(0x00);
	}
}
void Nokia5110::reverse(char *data)
{
 46e:	cf 92       	push	r12
 470:	df 92       	push	r13
 472:	ef 92       	push	r14
 474:	ff 92       	push	r15
 476:	0f 93       	push	r16
 478:	1f 93       	push	r17
 47a:	cf 93       	push	r28
 47c:	df 93       	push	r29
 47e:	7c 01       	movw	r14, r24
	register int i = 0;
	int length = 0;
	while (data[i]){
 480:	fb 01       	movw	r30, r22
 482:	80 81       	ld	r24, Z
 484:	81 11       	cpse	r24, r1
 486:	05 c0       	rjmp	.+10     	; 0x492 <_ZN9Nokia51107reverseEPc+0x24>
 488:	2a c0       	rjmp	.+84     	; 0x4de <_ZN9Nokia51107reverseEPc+0x70>
		length++;
		i++;
	}
	for (i = 0; i < length; i++)
 48a:	10 16       	cp	r1, r16
 48c:	11 06       	cpc	r1, r17
 48e:	e4 f0       	brlt	.+56     	; 0x4c8 <_ZN9Nokia51107reverseEPc+0x5a>
 490:	0a c0       	rjmp	.+20     	; 0x4a6 <_ZN9Nokia51107reverseEPc+0x38>
 492:	fb 01       	movw	r30, r22
 494:	31 96       	adiw	r30, 0x01	; 1
}
void Nokia5110::reverse(char *data)
{
	register int i = 0;
	int length = 0;
	while (data[i]){
 496:	00 e0       	ldi	r16, 0x00	; 0
 498:	10 e0       	ldi	r17, 0x00	; 0
		length++;
 49a:	0f 5f       	subi	r16, 0xFF	; 255
 49c:	1f 4f       	sbci	r17, 0xFF	; 255
}
void Nokia5110::reverse(char *data)
{
	register int i = 0;
	int length = 0;
	while (data[i]){
 49e:	81 91       	ld	r24, Z+
 4a0:	81 11       	cpse	r24, r1
 4a2:	fb cf       	rjmp	.-10     	; 0x49a <_ZN9Nokia51107reverseEPc+0x2c>
 4a4:	f2 cf       	rjmp	.-28     	; 0x48a <_ZN9Nokia51107reverseEPc+0x1c>
		length++;
		i++;
	}
	for (i = 0; i < length; i++)
		this->reversesendChar(data[i]);
	for (i = 0; i < (14 - length)*6; i++)
 4a6:	8e e0       	ldi	r24, 0x0E	; 14
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	9c 01       	movw	r18, r24
 4ac:	20 1b       	sub	r18, r16
 4ae:	31 0b       	sbc	r19, r17
 4b0:	89 01       	movw	r16, r18
 4b2:	c9 01       	movw	r24, r18
 4b4:	88 0f       	add	r24, r24
 4b6:	99 1f       	adc	r25, r25
 4b8:	08 0f       	add	r16, r24
 4ba:	19 1f       	adc	r17, r25
 4bc:	00 0f       	add	r16, r16
 4be:	11 1f       	adc	r17, r17
 4c0:	10 16       	cp	r1, r16
 4c2:	11 06       	cpc	r1, r17
 4c4:	74 f0       	brlt	.+28     	; 0x4e2 <_ZN9Nokia51107reverseEPc+0x74>
 4c6:	16 c0       	rjmp	.+44     	; 0x4f4 <_ZN9Nokia51107reverseEPc+0x86>
 4c8:	eb 01       	movw	r28, r22
 4ca:	6b 01       	movw	r12, r22
 4cc:	c0 0e       	add	r12, r16
 4ce:	d1 1e       	adc	r13, r17
	while (data[i]){
		length++;
		i++;
	}
	for (i = 0; i < length; i++)
		this->reversesendChar(data[i]);
 4d0:	69 91       	ld	r22, Y+
 4d2:	c7 01       	movw	r24, r14
 4d4:	a3 df       	rcall	.-186    	; 0x41c <_ZN9Nokia511015reversesendCharEc>
	int length = 0;
	while (data[i]){
		length++;
		i++;
	}
	for (i = 0; i < length; i++)
 4d6:	cc 16       	cp	r12, r28
 4d8:	dd 06       	cpc	r13, r29
 4da:	d1 f7       	brne	.-12     	; 0x4d0 <_ZN9Nokia51107reverseEPc+0x62>
 4dc:	e4 cf       	rjmp	.-56     	; 0x4a6 <_ZN9Nokia51107reverseEPc+0x38>
		this->reversesendChar(data[i]);
	for (i = 0; i < (14 - length)*6; i++)
 4de:	04 e5       	ldi	r16, 0x54	; 84
 4e0:	10 e0       	ldi	r17, 0x00	; 0
 4e2:	c0 e0       	ldi	r28, 0x00	; 0
 4e4:	d0 e0       	ldi	r29, 0x00	; 0
		this->sendData(0xFF);
 4e6:	6f ef       	ldi	r22, 0xFF	; 255
 4e8:	c7 01       	movw	r24, r14
 4ea:	c9 de       	rcall	.-622    	; 0x27e <_ZN9Nokia51108sendDataEh>
		length++;
		i++;
	}
	for (i = 0; i < length; i++)
		this->reversesendChar(data[i]);
	for (i = 0; i < (14 - length)*6; i++)
 4ec:	21 96       	adiw	r28, 0x01	; 1
 4ee:	0c 17       	cp	r16, r28
 4f0:	1d 07       	cpc	r17, r29
 4f2:	c9 f7       	brne	.-14     	; 0x4e6 <_ZN9Nokia51107reverseEPc+0x78>
		this->sendData(0xFF);
}
 4f4:	df 91       	pop	r29
 4f6:	cf 91       	pop	r28
 4f8:	1f 91       	pop	r17
 4fa:	0f 91       	pop	r16
 4fc:	ff 90       	pop	r15
 4fe:	ef 90       	pop	r14
 500:	df 90       	pop	r13
 502:	cf 90       	pop	r12
 504:	08 95       	ret

00000506 <_ZN9Nokia511010PrintArrayEPA14_cii>:
void Nokia5110::PrintArray(char data[10][14], int x, int y)
{
 506:	2f 92       	push	r2
 508:	3f 92       	push	r3
 50a:	4f 92       	push	r4
 50c:	5f 92       	push	r5
 50e:	6f 92       	push	r6
 510:	7f 92       	push	r7
 512:	8f 92       	push	r8
 514:	9f 92       	push	r9
 516:	af 92       	push	r10
 518:	bf 92       	push	r11
 51a:	cf 92       	push	r12
 51c:	df 92       	push	r13
 51e:	ef 92       	push	r14
 520:	ff 92       	push	r15
 522:	0f 93       	push	r16
 524:	1f 93       	push	r17
 526:	cf 93       	push	r28
 528:	df 93       	push	r29
 52a:	00 d0       	rcall	.+0      	; 0x52c <_ZN9Nokia511010PrintArrayEPA14_cii+0x26>
 52c:	00 d0       	rcall	.+0      	; 0x52e <_ZN9Nokia511010PrintArrayEPA14_cii+0x28>
 52e:	00 d0       	rcall	.+0      	; 0x530 <_ZN9Nokia511010PrintArrayEPA14_cii+0x2a>
 530:	cd b7       	in	r28, 0x3d	; 61
 532:	de b7       	in	r29, 0x3e	; 62
 534:	6c 01       	movw	r12, r24
 536:	7e 83       	std	Y+6, r23	; 0x06
 538:	6d 83       	std	Y+5, r22	; 0x05
 53a:	8a 01       	movw	r16, r20
 53c:	29 01       	movw	r4, r18
	this->setCursor(0, 0);
 53e:	40 e0       	ldi	r20, 0x00	; 0
 540:	60 e0       	ldi	r22, 0x00	; 0
 542:	a2 de       	rcall	.-700    	; 0x288 <_ZN9Nokia51109setCursorEhh>
	this->fillUp("LIST:");
 544:	6c ee       	ldi	r22, 0xEC	; 236
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	c6 01       	movw	r24, r12
 54a:	1c df       	rcall	.-456    	; 0x384 <_ZN9Nokia51106fillUpEPc>
			this->fillUp(data[x]);
		}
		if(z == 0 && y == 1)
		{
			this->setCursor(0, 1);
			this->reverse(data[x]);
 54c:	a8 01       	movw	r20, r16
 54e:	44 0f       	add	r20, r20
 550:	55 1f       	adc	r21, r21
 552:	3a 01       	movw	r6, r20
 554:	66 0c       	add	r6, r6
 556:	77 1c       	adc	r7, r7
 558:	66 0c       	add	r6, r6
 55a:	77 1c       	adc	r7, r7
 55c:	66 0c       	add	r6, r6
 55e:	77 1c       	adc	r7, r7
 560:	64 1a       	sub	r6, r20
 562:	75 0a       	sbc	r7, r21
 564:	8d 80       	ldd	r8, Y+5	; 0x05
 566:	9e 80       	ldd	r9, Y+6	; 0x06
 568:	86 0c       	add	r8, r6
 56a:	97 1c       	adc	r9, r7
		}
		if(z == 1 && y != 2)
		{
			this->setCursor(0, 2);
			this->fillUp(data[x + 1]);
 56c:	53 01       	movw	r10, r6
 56e:	8e e0       	ldi	r24, 0x0E	; 14
 570:	a8 0e       	add	r10, r24
 572:	b1 1c       	adc	r11, r1
 574:	8d 81       	ldd	r24, Y+5	; 0x05
 576:	9e 81       	ldd	r25, Y+6	; 0x06
 578:	a8 0e       	add	r10, r24
 57a:	b9 1e       	adc	r11, r25
			this->reverse(data[x + 1]);
		}
		if(z == 2 && y != 3)
		{
			this->setCursor(0, 3);
			this->fillUp(data[x + 2]);
 57c:	73 01       	movw	r14, r6
 57e:	9c e1       	ldi	r25, 0x1C	; 28
 580:	e9 0e       	add	r14, r25
 582:	f1 1c       	adc	r15, r1
 584:	8d 81       	ldd	r24, Y+5	; 0x05
 586:	9e 81       	ldd	r25, Y+6	; 0x06
 588:	e8 0e       	add	r14, r24
 58a:	f9 1e       	adc	r15, r25
		}
		if(z == 2 && y == 3)
		{
			this->setCursor(0, 3);
			this->reverse(data[x + 2]);
 58c:	3e 2c       	mov	r3, r14
 58e:	2f 2c       	mov	r2, r15
		}
		if(z == 3 && y != 4)
		{
			this->setCursor(0, 4);
			this->fillUp(data[x + 3]);
 590:	83 01       	movw	r16, r6
 592:	06 5d       	subi	r16, 0xD6	; 214
 594:	1f 4f       	sbci	r17, 0xFF	; 255
 596:	08 0f       	add	r16, r24
 598:	19 1f       	adc	r17, r25
		}
		if(z == 3 && y == 4)
		{
			this->setCursor(0, 4);
			this->reverse(data[x + 3]);
 59a:	09 83       	std	Y+1, r16	; 0x01
 59c:	1a 83       	std	Y+2, r17	; 0x02
		}
		if(z == 4 && y != 5)
		{
			this->setCursor(0, 5);
			this->fillUp(data[x + 4]);
 59e:	98 e3       	ldi	r25, 0x38	; 56
 5a0:	69 0e       	add	r6, r25
 5a2:	71 1c       	adc	r7, r1
 5a4:	8d 81       	ldd	r24, Y+5	; 0x05
 5a6:	9e 81       	ldd	r25, Y+6	; 0x06
 5a8:	68 0e       	add	r6, r24
 5aa:	79 1e       	adc	r7, r25
		}
		if(z == 4 && y == 5)
		{
			this->setCursor(0, 5);
			this->reverse(data[x + 4]);
 5ac:	6b 82       	std	Y+3, r6	; 0x03
 5ae:	7c 82       	std	Y+4, r7	; 0x04
}
void Nokia5110::PrintArray(char data[10][14], int x, int y)
{
	this->setCursor(0, 0);
	this->fillUp("LIST:");
	int z = 0;
 5b0:	1e 82       	std	Y+6, r1	; 0x06
 5b2:	1d 82       	std	Y+5, r1	; 0x05
	for (int i = 0; i < 5; i++)
	{
		if(z == 0 && y != 1)
 5b4:	8d 81       	ldd	r24, Y+5	; 0x05
 5b6:	9e 81       	ldd	r25, Y+6	; 0x06
 5b8:	89 2b       	or	r24, r25
 5ba:	69 f4       	brne	.+26     	; 0x5d6 <_ZN9Nokia511010PrintArrayEPA14_cii+0xd0>
 5bc:	91 e0       	ldi	r25, 0x01	; 1
 5be:	49 16       	cp	r4, r25
 5c0:	51 04       	cpc	r5, r1
 5c2:	09 f4       	brne	.+2      	; 0x5c6 <_ZN9Nokia511010PrintArrayEPA14_cii+0xc0>
 5c4:	8b c0       	rjmp	.+278    	; 0x6dc <_ZN9Nokia511010PrintArrayEPA14_cii+0x1d6>
		{
			this->setCursor(0, 1);
 5c6:	41 e0       	ldi	r20, 0x01	; 1
 5c8:	60 e0       	ldi	r22, 0x00	; 0
 5ca:	c6 01       	movw	r24, r12
 5cc:	5d de       	rcall	.-838    	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->fillUp(data[x]);
 5ce:	b4 01       	movw	r22, r8
 5d0:	c6 01       	movw	r24, r12
 5d2:	d8 de       	rcall	.-592    	; 0x384 <_ZN9Nokia51106fillUpEPc>
 5d4:	1c c0       	rjmp	.+56     	; 0x60e <_ZN9Nokia511010PrintArrayEPA14_cii+0x108>
		if(z == 0 && y == 1)
		{
			this->setCursor(0, 1);
			this->reverse(data[x]);
		}
		if(z == 1 && y != 2)
 5d6:	8d 81       	ldd	r24, Y+5	; 0x05
 5d8:	9e 81       	ldd	r25, Y+6	; 0x06
 5da:	01 97       	sbiw	r24, 0x01	; 1
 5dc:	c1 f4       	brne	.+48     	; 0x60e <_ZN9Nokia511010PrintArrayEPA14_cii+0x108>
 5de:	92 e0       	ldi	r25, 0x02	; 2
 5e0:	49 16       	cp	r4, r25
 5e2:	51 04       	cpc	r5, r1
 5e4:	41 f0       	breq	.+16     	; 0x5f6 <_ZN9Nokia511010PrintArrayEPA14_cii+0xf0>
		{
			this->setCursor(0, 2);
 5e6:	42 e0       	ldi	r20, 0x02	; 2
 5e8:	60 e0       	ldi	r22, 0x00	; 0
 5ea:	c6 01       	movw	r24, r12
 5ec:	4d de       	rcall	.-870    	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->fillUp(data[x + 1]);
 5ee:	b5 01       	movw	r22, r10
 5f0:	c6 01       	movw	r24, r12
 5f2:	c8 de       	rcall	.-624    	; 0x384 <_ZN9Nokia51106fillUpEPc>
 5f4:	2d c0       	rjmp	.+90     	; 0x650 <_ZN9Nokia511010PrintArrayEPA14_cii+0x14a>
		}
		if(z == 1 && y == 2)
		{
			this->setCursor(0, 2);
 5f6:	42 e0       	ldi	r20, 0x02	; 2
 5f8:	60 e0       	ldi	r22, 0x00	; 0
 5fa:	c6 01       	movw	r24, r12
 5fc:	45 de       	rcall	.-886    	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->reverse(data[x + 1]);
 5fe:	b5 01       	movw	r22, r10
 600:	c6 01       	movw	r24, r12
 602:	35 df       	rcall	.-406    	; 0x46e <_ZN9Nokia51107reverseEPc>
		if(z == 2 && y != 3)
		{
			this->setCursor(0, 3);
			this->fillUp(data[x + 2]);
		}
		if(z == 2 && y == 3)
 604:	8d 81       	ldd	r24, Y+5	; 0x05
 606:	9e 81       	ldd	r25, Y+6	; 0x06
 608:	02 97       	sbiw	r24, 0x02	; 2
 60a:	89 f0       	breq	.+34     	; 0x62e <_ZN9Nokia511010PrintArrayEPA14_cii+0x128>
 60c:	21 c0       	rjmp	.+66     	; 0x650 <_ZN9Nokia511010PrintArrayEPA14_cii+0x14a>
		if(z == 1 && y == 2)
		{
			this->setCursor(0, 2);
			this->reverse(data[x + 1]);
		}
		if(z == 2 && y != 3)
 60e:	8d 81       	ldd	r24, Y+5	; 0x05
 610:	9e 81       	ldd	r25, Y+6	; 0x06
 612:	02 97       	sbiw	r24, 0x02	; 2
 614:	e9 f4       	brne	.+58     	; 0x650 <_ZN9Nokia511010PrintArrayEPA14_cii+0x14a>
 616:	93 e0       	ldi	r25, 0x03	; 3
 618:	49 16       	cp	r4, r25
 61a:	51 04       	cpc	r5, r1
 61c:	61 f0       	breq	.+24     	; 0x636 <_ZN9Nokia511010PrintArrayEPA14_cii+0x130>
		{
			this->setCursor(0, 3);
 61e:	43 e0       	ldi	r20, 0x03	; 3
 620:	60 e0       	ldi	r22, 0x00	; 0
 622:	c6 01       	movw	r24, r12
 624:	31 de       	rcall	.-926    	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->fillUp(data[x + 2]);
 626:	b7 01       	movw	r22, r14
 628:	c6 01       	movw	r24, r12
 62a:	ac de       	rcall	.-680    	; 0x384 <_ZN9Nokia51106fillUpEPc>
 62c:	32 c0       	rjmp	.+100    	; 0x692 <_ZN9Nokia511010PrintArrayEPA14_cii+0x18c>
		}
		if(z == 2 && y == 3)
 62e:	83 e0       	ldi	r24, 0x03	; 3
 630:	48 16       	cp	r4, r24
 632:	51 04       	cpc	r5, r1
 634:	71 f5       	brne	.+92     	; 0x692 <_ZN9Nokia511010PrintArrayEPA14_cii+0x18c>
		{
			this->setCursor(0, 3);
 636:	43 e0       	ldi	r20, 0x03	; 3
 638:	60 e0       	ldi	r22, 0x00	; 0
 63a:	c6 01       	movw	r24, r12
 63c:	25 de       	rcall	.-950    	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->reverse(data[x + 2]);
 63e:	63 2d       	mov	r22, r3
 640:	72 2d       	mov	r23, r2
 642:	c6 01       	movw	r24, r12
 644:	14 df       	rcall	.-472    	; 0x46e <_ZN9Nokia51107reverseEPc>
		if(z == 3 && y != 4)
		{
			this->setCursor(0, 4);
			this->fillUp(data[x + 3]);
		}
		if(z == 3 && y == 4)
 646:	8d 81       	ldd	r24, Y+5	; 0x05
 648:	9e 81       	ldd	r25, Y+6	; 0x06
 64a:	03 97       	sbiw	r24, 0x03	; 3
 64c:	89 f0       	breq	.+34     	; 0x670 <_ZN9Nokia511010PrintArrayEPA14_cii+0x16a>
 64e:	21 c0       	rjmp	.+66     	; 0x692 <_ZN9Nokia511010PrintArrayEPA14_cii+0x18c>
		if(z == 2 && y == 3)
		{
			this->setCursor(0, 3);
			this->reverse(data[x + 2]);
		}
		if(z == 3 && y != 4)
 650:	8d 81       	ldd	r24, Y+5	; 0x05
 652:	9e 81       	ldd	r25, Y+6	; 0x06
 654:	03 97       	sbiw	r24, 0x03	; 3
 656:	e9 f4       	brne	.+58     	; 0x692 <_ZN9Nokia511010PrintArrayEPA14_cii+0x18c>
 658:	94 e0       	ldi	r25, 0x04	; 4
 65a:	49 16       	cp	r4, r25
 65c:	51 04       	cpc	r5, r1
 65e:	61 f0       	breq	.+24     	; 0x678 <_ZN9Nokia511010PrintArrayEPA14_cii+0x172>
		{
			this->setCursor(0, 4);
 660:	44 e0       	ldi	r20, 0x04	; 4
 662:	60 e0       	ldi	r22, 0x00	; 0
 664:	c6 01       	movw	r24, r12
 666:	10 de       	rcall	.-992    	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->fillUp(data[x + 3]);
 668:	b8 01       	movw	r22, r16
 66a:	c6 01       	movw	r24, r12
 66c:	8b de       	rcall	.-746    	; 0x384 <_ZN9Nokia51106fillUpEPc>
 66e:	2d c0       	rjmp	.+90     	; 0x6ca <_ZN9Nokia511010PrintArrayEPA14_cii+0x1c4>
		}
		if(z == 3 && y == 4)
 670:	84 e0       	ldi	r24, 0x04	; 4
 672:	48 16       	cp	r4, r24
 674:	51 04       	cpc	r5, r1
 676:	49 f5       	brne	.+82     	; 0x6ca <_ZN9Nokia511010PrintArrayEPA14_cii+0x1c4>
		{
			this->setCursor(0, 4);
 678:	44 e0       	ldi	r20, 0x04	; 4
 67a:	60 e0       	ldi	r22, 0x00	; 0
 67c:	c6 01       	movw	r24, r12
 67e:	04 de       	rcall	.-1016   	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->reverse(data[x + 3]);
 680:	69 81       	ldd	r22, Y+1	; 0x01
 682:	7a 81       	ldd	r23, Y+2	; 0x02
 684:	c6 01       	movw	r24, r12
 686:	f3 de       	rcall	.-538    	; 0x46e <_ZN9Nokia51107reverseEPc>
		if(z == 4 && y != 5)
		{
			this->setCursor(0, 5);
			this->fillUp(data[x + 4]);
		}
		if(z == 4 && y == 5)
 688:	8d 81       	ldd	r24, Y+5	; 0x05
 68a:	9e 81       	ldd	r25, Y+6	; 0x06
 68c:	04 97       	sbiw	r24, 0x04	; 4
 68e:	89 f0       	breq	.+34     	; 0x6b2 <_ZN9Nokia511010PrintArrayEPA14_cii+0x1ac>
 690:	1c c0       	rjmp	.+56     	; 0x6ca <_ZN9Nokia511010PrintArrayEPA14_cii+0x1c4>
		if(z == 3 && y == 4)
		{
			this->setCursor(0, 4);
			this->reverse(data[x + 3]);
		}
		if(z == 4 && y != 5)
 692:	8d 81       	ldd	r24, Y+5	; 0x05
 694:	9e 81       	ldd	r25, Y+6	; 0x06
 696:	04 97       	sbiw	r24, 0x04	; 4
 698:	c1 f4       	brne	.+48     	; 0x6ca <_ZN9Nokia511010PrintArrayEPA14_cii+0x1c4>
 69a:	95 e0       	ldi	r25, 0x05	; 5
 69c:	49 16       	cp	r4, r25
 69e:	51 04       	cpc	r5, r1
 6a0:	61 f0       	breq	.+24     	; 0x6ba <_ZN9Nokia511010PrintArrayEPA14_cii+0x1b4>
		{
			this->setCursor(0, 5);
 6a2:	45 e0       	ldi	r20, 0x05	; 5
 6a4:	60 e0       	ldi	r22, 0x00	; 0
 6a6:	c6 01       	movw	r24, r12
 6a8:	ef dd       	rcall	.-1058   	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->fillUp(data[x + 4]);
 6aa:	b3 01       	movw	r22, r6
 6ac:	c6 01       	movw	r24, r12
 6ae:	6a de       	rcall	.-812    	; 0x384 <_ZN9Nokia51106fillUpEPc>
 6b0:	1d c0       	rjmp	.+58     	; 0x6ec <_ZN9Nokia511010PrintArrayEPA14_cii+0x1e6>
		}
		if(z == 4 && y == 5)
 6b2:	85 e0       	ldi	r24, 0x05	; 5
 6b4:	48 16       	cp	r4, r24
 6b6:	51 04       	cpc	r5, r1
 6b8:	c9 f4       	brne	.+50     	; 0x6ec <_ZN9Nokia511010PrintArrayEPA14_cii+0x1e6>
		{
			this->setCursor(0, 5);
 6ba:	45 e0       	ldi	r20, 0x05	; 5
 6bc:	60 e0       	ldi	r22, 0x00	; 0
 6be:	c6 01       	movw	r24, r12
 6c0:	e3 dd       	rcall	.-1082   	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->reverse(data[x + 4]);
 6c2:	6b 81       	ldd	r22, Y+3	; 0x03
 6c4:	7c 81       	ldd	r23, Y+4	; 0x04
 6c6:	c6 01       	movw	r24, r12
 6c8:	d2 de       	rcall	.-604    	; 0x46e <_ZN9Nokia51107reverseEPc>
		}
		z++;
 6ca:	8d 81       	ldd	r24, Y+5	; 0x05
 6cc:	9e 81       	ldd	r25, Y+6	; 0x06
 6ce:	01 96       	adiw	r24, 0x01	; 1
 6d0:	9e 83       	std	Y+6, r25	; 0x06
 6d2:	8d 83       	std	Y+5, r24	; 0x05
void Nokia5110::PrintArray(char data[10][14], int x, int y)
{
	this->setCursor(0, 0);
	this->fillUp("LIST:");
	int z = 0;
	for (int i = 0; i < 5; i++)
 6d4:	05 97       	sbiw	r24, 0x05	; 5
 6d6:	09 f0       	breq	.+2      	; 0x6da <_ZN9Nokia511010PrintArrayEPA14_cii+0x1d4>
 6d8:	6d cf       	rjmp	.-294    	; 0x5b4 <_ZN9Nokia511010PrintArrayEPA14_cii+0xae>
 6da:	08 c0       	rjmp	.+16     	; 0x6ec <_ZN9Nokia511010PrintArrayEPA14_cii+0x1e6>
			this->setCursor(0, 1);
			this->fillUp(data[x]);
		}
		if(z == 0 && y == 1)
		{
			this->setCursor(0, 1);
 6dc:	41 e0       	ldi	r20, 0x01	; 1
 6de:	60 e0       	ldi	r22, 0x00	; 0
 6e0:	c6 01       	movw	r24, r12
 6e2:	d2 dd       	rcall	.-1116   	; 0x288 <_ZN9Nokia51109setCursorEhh>
			this->reverse(data[x]);
 6e4:	b4 01       	movw	r22, r8
 6e6:	c6 01       	movw	r24, r12
 6e8:	c2 de       	rcall	.-636    	; 0x46e <_ZN9Nokia51107reverseEPc>
 6ea:	b2 cf       	rjmp	.-156    	; 0x650 <_ZN9Nokia511010PrintArrayEPA14_cii+0x14a>
			this->setCursor(0, 5);
			this->reverse(data[x + 4]);
		}
		z++;
	}
}
 6ec:	26 96       	adiw	r28, 0x06	; 6
 6ee:	0f b6       	in	r0, 0x3f	; 63
 6f0:	f8 94       	cli
 6f2:	de bf       	out	0x3e, r29	; 62
 6f4:	0f be       	out	0x3f, r0	; 63
 6f6:	cd bf       	out	0x3d, r28	; 61
 6f8:	df 91       	pop	r29
 6fa:	cf 91       	pop	r28
 6fc:	1f 91       	pop	r17
 6fe:	0f 91       	pop	r16
 700:	ff 90       	pop	r15
 702:	ef 90       	pop	r14
 704:	df 90       	pop	r13
 706:	cf 90       	pop	r12
 708:	bf 90       	pop	r11
 70a:	af 90       	pop	r10
 70c:	9f 90       	pop	r9
 70e:	8f 90       	pop	r8
 710:	7f 90       	pop	r7
 712:	6f 90       	pop	r6
 714:	5f 90       	pop	r5
 716:	4f 90       	pop	r4
 718:	3f 90       	pop	r3
 71a:	2f 90       	pop	r2
 71c:	08 95       	ret

0000071e <__tablejump2__>:
 71e:	ee 0f       	add	r30, r30
 720:	ff 1f       	adc	r31, r31
 722:	05 90       	lpm	r0, Z+
 724:	f4 91       	lpm	r31, Z
 726:	e0 2d       	mov	r30, r0
 728:	09 94       	ijmp

0000072a <_exit>:
 72a:	f8 94       	cli

0000072c <__stop_program>:
 72c:	ff cf       	rjmp	.-2      	; 0x72c <__stop_program>
