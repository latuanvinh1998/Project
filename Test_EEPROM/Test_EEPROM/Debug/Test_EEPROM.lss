
Test_EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000037a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001e0  00800060  0000037a  0000040e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800240  00800240  000005ee  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000620  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  0000065c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000189e  00000000  00000000  00000734  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008a1  00000000  00000000  00001fd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009c1  00000000  00000000  00002873  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a0  00000000  00000000  00003234  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000679  00000000  00000000  000034d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000da8  00000000  00000000  00003b4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  000048f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
   4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>

00000026 <__ctors_start>:
  26:	0c 01       	movw	r0, r24

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d4 e0       	ldi	r29, 0x04	; 4
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
  34:	12 e0       	ldi	r17, 0x02	; 2
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	ea e7       	ldi	r30, 0x7A	; 122
  3c:	f3 e0       	ldi	r31, 0x03	; 3
  3e:	02 c0       	rjmp	.+4      	; 0x44 <__SREG__+0x5>
  40:	05 90       	lpm	r0, Z+
  42:	0d 92       	st	X+, r0
  44:	a0 34       	cpi	r26, 0x40	; 64
  46:	b1 07       	cpc	r27, r17
  48:	d9 f7       	brne	.-10     	; 0x40 <__SREG__+0x1>

0000004a <__do_clear_bss>:
  4a:	22 e0       	ldi	r18, 0x02	; 2
  4c:	a0 e4       	ldi	r26, 0x40	; 64
  4e:	b2 e0       	ldi	r27, 0x02	; 2
  50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
  52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
  54:	a3 34       	cpi	r26, 0x43	; 67
  56:	b2 07       	cpc	r27, r18
  58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>

0000005a <__do_global_ctors>:
  5a:	10 e0       	ldi	r17, 0x00	; 0
  5c:	c4 e1       	ldi	r28, 0x14	; 20
  5e:	d0 e0       	ldi	r29, 0x00	; 0
  60:	03 c0       	rjmp	.+6      	; 0x68 <__do_global_ctors+0xe>
  62:	21 97       	sbiw	r28, 0x01	; 1
  64:	fe 01       	movw	r30, r28
  66:	81 d1       	rcall	.+770    	; 0x36a <__tablejump2__>
  68:	c3 31       	cpi	r28, 0x13	; 19
  6a:	d1 07       	cpc	r29, r17
  6c:	d1 f7       	brne	.-12     	; 0x62 <__do_global_ctors+0x8>
  6e:	b1 d0       	rcall	.+354    	; 0x1d2 <main>
  70:	82 c1       	rjmp	.+772    	; 0x376 <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <_Z6EEOpenv>:
	register int i = 0;
	while (data[i]){
		USART_Transmit(data[i]);
		i++;
	}
}
  74:	11 b8       	out	0x01, r1	; 1
  76:	80 e2       	ldi	r24, 0x20	; 32
  78:	80 b9       	out	0x00, r24	; 0
  7a:	84 e8       	ldi	r24, 0x84	; 132
  7c:	86 bf       	out	0x36, r24	; 54
  7e:	08 95       	ret

00000080 <_Z11EEWriteBytejc>:
  80:	24 ea       	ldi	r18, 0xA4	; 164
  82:	26 bf       	out	0x36, r18	; 54
  84:	06 b6       	in	r0, 0x36	; 54
  86:	07 fe       	sbrs	r0, 7
  88:	fd cf       	rjmp	.-6      	; 0x84 <_Z11EEWriteBytejc+0x4>
  8a:	21 b1       	in	r18, 0x01	; 1
  8c:	28 7f       	andi	r18, 0xF8	; 248
  8e:	28 30       	cpi	r18, 0x08	; 8
  90:	11 f0       	breq	.+4      	; 0x96 <_Z11EEWriteBytejc+0x16>
  92:	81 b1       	in	r24, 0x01	; 1
  94:	08 95       	ret
  96:	20 ea       	ldi	r18, 0xA0	; 160
  98:	23 b9       	out	0x03, r18	; 3
  9a:	24 e8       	ldi	r18, 0x84	; 132
  9c:	26 bf       	out	0x36, r18	; 54
  9e:	06 b6       	in	r0, 0x36	; 54
  a0:	07 fe       	sbrs	r0, 7
  a2:	fd cf       	rjmp	.-6      	; 0x9e <_Z11EEWriteBytejc+0x1e>
  a4:	21 b1       	in	r18, 0x01	; 1
  a6:	28 7f       	andi	r18, 0xF8	; 248
  a8:	28 31       	cpi	r18, 0x18	; 24
  aa:	11 f0       	breq	.+4      	; 0xb0 <_Z11EEWriteBytejc+0x30>
  ac:	81 b1       	in	r24, 0x01	; 1
  ae:	08 95       	ret
  b0:	93 b9       	out	0x03, r25	; 3
  b2:	94 e8       	ldi	r25, 0x84	; 132
  b4:	96 bf       	out	0x36, r25	; 54
  b6:	06 b6       	in	r0, 0x36	; 54
  b8:	07 fe       	sbrs	r0, 7
  ba:	fd cf       	rjmp	.-6      	; 0xb6 <_Z11EEWriteBytejc+0x36>
  bc:	91 b1       	in	r25, 0x01	; 1
  be:	98 7f       	andi	r25, 0xF8	; 248
  c0:	98 32       	cpi	r25, 0x28	; 40
  c2:	11 f0       	breq	.+4      	; 0xc8 <_Z11EEWriteBytejc+0x48>
  c4:	81 b1       	in	r24, 0x01	; 1
  c6:	08 95       	ret
  c8:	83 b9       	out	0x03, r24	; 3
  ca:	84 e8       	ldi	r24, 0x84	; 132
  cc:	86 bf       	out	0x36, r24	; 54
  ce:	06 b6       	in	r0, 0x36	; 54
  d0:	07 fe       	sbrs	r0, 7
  d2:	fd cf       	rjmp	.-6      	; 0xce <_Z11EEWriteBytejc+0x4e>
  d4:	81 b1       	in	r24, 0x01	; 1
  d6:	88 7f       	andi	r24, 0xF8	; 248
  d8:	88 32       	cpi	r24, 0x28	; 40
  da:	11 f0       	breq	.+4      	; 0xe0 <_Z11EEWriteBytejc+0x60>
  dc:	81 b1       	in	r24, 0x01	; 1
  de:	08 95       	ret
  e0:	63 b9       	out	0x03, r22	; 3
  e2:	84 e8       	ldi	r24, 0x84	; 132
  e4:	86 bf       	out	0x36, r24	; 54
  e6:	06 b6       	in	r0, 0x36	; 54
  e8:	07 fe       	sbrs	r0, 7
  ea:	fd cf       	rjmp	.-6      	; 0xe6 <_Z11EEWriteBytejc+0x66>
  ec:	81 b1       	in	r24, 0x01	; 1
  ee:	88 7f       	andi	r24, 0xF8	; 248
  f0:	88 32       	cpi	r24, 0x28	; 40
  f2:	11 f0       	breq	.+4      	; 0xf8 <_Z11EEWriteBytejc+0x78>
  f4:	81 b1       	in	r24, 0x01	; 1
  f6:	08 95       	ret
  f8:	84 e9       	ldi	r24, 0x94	; 148
  fa:	86 bf       	out	0x36, r24	; 54
  fc:	06 b6       	in	r0, 0x36	; 54
  fe:	04 fc       	sbrc	r0, 4
 100:	fd cf       	rjmp	.-6      	; 0xfc <_Z11EEWriteBytejc+0x7c>
 102:	8f eb       	ldi	r24, 0xBF	; 191
 104:	9d e5       	ldi	r25, 0x5D	; 93
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <_Z11EEWriteBytejc+0x86>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <_Z11EEWriteBytejc+0x8c>
 10c:	00 00       	nop
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	08 95       	ret

00000112 <_Z10EEReadBytej>:
 112:	24 ea       	ldi	r18, 0xA4	; 164
 114:	26 bf       	out	0x36, r18	; 54
 116:	06 b6       	in	r0, 0x36	; 54
 118:	07 fe       	sbrs	r0, 7
 11a:	fd cf       	rjmp	.-6      	; 0x116 <_Z10EEReadBytej+0x4>
 11c:	21 b1       	in	r18, 0x01	; 1
 11e:	28 7f       	andi	r18, 0xF8	; 248
 120:	28 30       	cpi	r18, 0x08	; 8
 122:	11 f0       	breq	.+4      	; 0x128 <_Z10EEReadBytej+0x16>
 124:	81 b1       	in	r24, 0x01	; 1
 126:	08 95       	ret
 128:	20 ea       	ldi	r18, 0xA0	; 160
 12a:	23 b9       	out	0x03, r18	; 3
 12c:	24 e8       	ldi	r18, 0x84	; 132
 12e:	26 bf       	out	0x36, r18	; 54
 130:	06 b6       	in	r0, 0x36	; 54
 132:	07 fe       	sbrs	r0, 7
 134:	fd cf       	rjmp	.-6      	; 0x130 <_Z10EEReadBytej+0x1e>
 136:	93 b9       	out	0x03, r25	; 3
 138:	94 e8       	ldi	r25, 0x84	; 132
 13a:	96 bf       	out	0x36, r25	; 54
 13c:	06 b6       	in	r0, 0x36	; 54
 13e:	07 fe       	sbrs	r0, 7
 140:	fd cf       	rjmp	.-6      	; 0x13c <_Z10EEReadBytej+0x2a>
 142:	91 b1       	in	r25, 0x01	; 1
 144:	98 7f       	andi	r25, 0xF8	; 248
 146:	98 32       	cpi	r25, 0x28	; 40
 148:	11 f0       	breq	.+4      	; 0x14e <_Z10EEReadBytej+0x3c>
 14a:	81 b1       	in	r24, 0x01	; 1
 14c:	08 95       	ret
 14e:	83 b9       	out	0x03, r24	; 3
 150:	84 e8       	ldi	r24, 0x84	; 132
 152:	86 bf       	out	0x36, r24	; 54
 154:	06 b6       	in	r0, 0x36	; 54
 156:	07 fe       	sbrs	r0, 7
 158:	fd cf       	rjmp	.-6      	; 0x154 <_Z10EEReadBytej+0x42>
 15a:	81 b1       	in	r24, 0x01	; 1
 15c:	88 7f       	andi	r24, 0xF8	; 248
 15e:	88 32       	cpi	r24, 0x28	; 40
 160:	11 f0       	breq	.+4      	; 0x166 <_Z10EEReadBytej+0x54>
 162:	81 b1       	in	r24, 0x01	; 1
 164:	08 95       	ret
 166:	84 ea       	ldi	r24, 0xA4	; 164
 168:	86 bf       	out	0x36, r24	; 54
 16a:	06 b6       	in	r0, 0x36	; 54
 16c:	07 fe       	sbrs	r0, 7
 16e:	fd cf       	rjmp	.-6      	; 0x16a <_Z10EEReadBytej+0x58>
 170:	81 b1       	in	r24, 0x01	; 1
 172:	88 7f       	andi	r24, 0xF8	; 248
 174:	80 31       	cpi	r24, 0x10	; 16
 176:	11 f0       	breq	.+4      	; 0x17c <_Z10EEReadBytej+0x6a>
 178:	81 b1       	in	r24, 0x01	; 1
 17a:	08 95       	ret
 17c:	81 ea       	ldi	r24, 0xA1	; 161
 17e:	83 b9       	out	0x03, r24	; 3
 180:	84 e8       	ldi	r24, 0x84	; 132
 182:	86 bf       	out	0x36, r24	; 54
 184:	06 b6       	in	r0, 0x36	; 54
 186:	07 fe       	sbrs	r0, 7
 188:	fd cf       	rjmp	.-6      	; 0x184 <_Z10EEReadBytej+0x72>
 18a:	81 b1       	in	r24, 0x01	; 1
 18c:	88 7f       	andi	r24, 0xF8	; 248
 18e:	80 34       	cpi	r24, 0x40	; 64
 190:	11 f0       	breq	.+4      	; 0x196 <_Z10EEReadBytej+0x84>
 192:	81 b1       	in	r24, 0x01	; 1
 194:	08 95       	ret
 196:	84 e8       	ldi	r24, 0x84	; 132
 198:	86 bf       	out	0x36, r24	; 54
 19a:	06 b6       	in	r0, 0x36	; 54
 19c:	07 fe       	sbrs	r0, 7
 19e:	fd cf       	rjmp	.-6      	; 0x19a <_Z10EEReadBytej+0x88>
 1a0:	81 b1       	in	r24, 0x01	; 1
 1a2:	88 7f       	andi	r24, 0xF8	; 248
 1a4:	88 35       	cpi	r24, 0x58	; 88
 1a6:	11 f0       	breq	.+4      	; 0x1ac <_Z10EEReadBytej+0x9a>
 1a8:	81 b1       	in	r24, 0x01	; 1
 1aa:	08 95       	ret
 1ac:	83 b1       	in	r24, 0x03	; 3
 1ae:	94 e9       	ldi	r25, 0x94	; 148
 1b0:	96 bf       	out	0x36, r25	; 54
 1b2:	06 b6       	in	r0, 0x36	; 54
 1b4:	04 fc       	sbrc	r0, 4
 1b6:	fd cf       	rjmp	.-6      	; 0x1b2 <_Z10EEReadBytej+0xa0>
 1b8:	08 95       	ret

000001ba <_Z10USART_Initv>:
 1ba:	10 bc       	out	0x20, r1	; 32
 1bc:	83 e3       	ldi	r24, 0x33	; 51
 1be:	89 b9       	out	0x09, r24	; 9
 1c0:	80 b5       	in	r24, 0x20	; 32
 1c2:	86 68       	ori	r24, 0x86	; 134
 1c4:	80 bd       	out	0x20, r24	; 32
 1c6:	53 9a       	sbi	0x0a, 3	; 10
 1c8:	08 95       	ret

000001ca <_Z14USART_Transmitc>:
 1ca:	5d 9b       	sbis	0x0b, 5	; 11
 1cc:	fe cf       	rjmp	.-4      	; 0x1ca <_Z14USART_Transmitc>
 1ce:	8c b9       	out	0x0c, r24	; 12
 1d0:	08 95       	ret

000001d2 <main>:
#include "N5110.h"
Nokia5110 lcd;

int main()
{
	EEOpen();
 1d2:	50 df       	rcall	.-352    	; 0x74 <_Z6EEOpenv>
	USART_Init();
 1d4:	f2 df       	rcall	.-28     	; 0x1ba <_Z10USART_Initv>
	lcd.begin();
 1d6:	80 e4       	ldi	r24, 0x40	; 64
 1d8:	92 e0       	ldi	r25, 0x02	; 2
 1da:	80 d0       	rcall	.+256    	; 0x2dc <_ZN9Nokia51105beginEv>
	lcd.setCursor(0, 0);
 1dc:	40 e0       	ldi	r20, 0x00	; 0
 1de:	60 e0       	ldi	r22, 0x00	; 0
 1e0:	80 e4       	ldi	r24, 0x40	; 64
 1e2:	92 e0       	ldi	r25, 0x02	; 2
 1e4:	44 d0       	rcall	.+136    	; 0x26e <_ZN9Nokia51109setCursorEhh>
	EEWriteByte(0x000F, 'c');
 1e6:	63 e6       	ldi	r22, 0x63	; 99
 1e8:	8f e0       	ldi	r24, 0x0F	; 15
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	49 df       	rcall	.-366    	; 0x80 <_Z11EEWriteBytejc>
	while(1)
	{
		USART_Transmit(EEReadByte(0x000F));
 1ee:	8f e0       	ldi	r24, 0x0F	; 15
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	8f df       	rcall	.-226    	; 0x112 <_Z10EEReadBytej>
 1f4:	ea df       	rcall	.-44     	; 0x1ca <_Z14USART_Transmitc>
		lcd.sendChar(EEReadByte(0x000F));
 1f6:	8f e0       	ldi	r24, 0x0F	; 15
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	8b df       	rcall	.-234    	; 0x112 <_Z10EEReadBytej>
 1fc:	68 2f       	mov	r22, r24
 1fe:	80 e4       	ldi	r24, 0x40	; 64
 200:	92 e0       	ldi	r25, 0x02	; 2
 202:	8d d0       	rcall	.+282    	; 0x31e <_ZN9Nokia51108sendCharEc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 204:	2f ef       	ldi	r18, 0xFF	; 255
 206:	89 e6       	ldi	r24, 0x69	; 105
 208:	98 e1       	ldi	r25, 0x18	; 24
 20a:	21 50       	subi	r18, 0x01	; 1
 20c:	80 40       	sbci	r24, 0x00	; 0
 20e:	90 40       	sbci	r25, 0x00	; 0
 210:	e1 f7       	brne	.-8      	; 0x20a <main+0x38>
 212:	00 c0       	rjmp	.+0      	; 0x214 <main+0x42>
 214:	00 00       	nop
 216:	eb cf       	rjmp	.-42     	; 0x1ee <main+0x1c>

00000218 <_GLOBAL__sub_I__Z6EEOpenv>:
#include <util/delay.h>
#include <avr/sfr_defs.h>
#include "24c64.h"
#include "USART.h"
#include "N5110.h"
Nokia5110 lcd;
 218:	80 e4       	ldi	r24, 0x40	; 64
 21a:	92 e0       	ldi	r25, 0x02	; 2
 21c:	3a d0       	rcall	.+116    	; 0x292 <_ZN9Nokia5110C1Ev>
 21e:	08 95       	ret

00000220 <_ZN9Nokia51104sendEih>:
#include "N5110.h"
void Nokia5110::send(int type, uint8_t data){
	LCD_PORT &= ~(1 << SCE);
 220:	c2 98       	cbi	0x18, 2	; 24
	
	if (type)
 222:	67 2b       	or	r22, r23
 224:	11 f0       	breq	.+4      	; 0x22a <_ZN9Nokia51104sendEih+0xa>
	LCD_PORT |= (1 << DC);
 226:	c6 9a       	sbi	0x18, 6	; 24
 228:	14 c0       	rjmp	.+40     	; 0x252 <_ZN9Nokia51104sendEih+0x32>
	else
	LCD_PORT &= ~(1 << DC );
 22a:	c6 98       	cbi	0x18, 6	; 24
 22c:	12 c0       	rjmp	.+36     	; 0x252 <_ZN9Nokia51104sendEih+0x32>
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7 - i)) & 0x01)
 22e:	9a 01       	movw	r18, r20
 230:	08 2e       	mov	r0, r24
 232:	02 c0       	rjmp	.+4      	; 0x238 <_ZN9Nokia51104sendEih+0x18>
 234:	35 95       	asr	r19
 236:	27 95       	ror	r18
 238:	0a 94       	dec	r0
 23a:	e2 f7       	brpl	.-8      	; 0x234 <_ZN9Nokia51104sendEih+0x14>
 23c:	20 ff       	sbrs	r18, 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <_ZN9Nokia51104sendEih+0x24>
		LCD_PORT |= (1 << SDIN);
 240:	c3 9a       	sbi	0x18, 3	; 24
 242:	01 c0       	rjmp	.+2      	; 0x246 <_ZN9Nokia51104sendEih+0x26>
		else
		LCD_PORT &= ~(1 << SDIN);
 244:	c3 98       	cbi	0x18, 3	; 24
		
		LCD_PORT |= (1 << SCLK);
 246:	c5 9a       	sbi	0x18, 5	; 24
		LCD_PORT &= ~(1 << SCLK);
 248:	c5 98       	cbi	0x18, 5	; 24
 24a:	01 97       	sbiw	r24, 0x01	; 1
 24c:	80 f7       	brcc	.-32     	; 0x22e <_ZN9Nokia51104sendEih+0xe>
	}
	
	LCD_PORT |= (1 << SCE);
 24e:	c2 9a       	sbi	0x18, 2	; 24
}
 250:	08 95       	ret
#include "N5110.h"
void Nokia5110::send(int type, uint8_t data){
 252:	87 e0       	ldi	r24, 0x07	; 7
 254:	90 e0       	ldi	r25, 0x00	; 0
	LCD_PORT |= (1 << DC);
	else
	LCD_PORT &= ~(1 << DC );
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7 - i)) & 0x01)
 256:	50 e0       	ldi	r21, 0x00	; 0
 258:	ea cf       	rjmp	.-44     	; 0x22e <_ZN9Nokia51104sendEih+0xe>

0000025a <_ZN9Nokia511011sendCommandEh>:
	}
	
	LCD_PORT |= (1 << SCE);
}

void Nokia5110::sendCommand(uint8_t cmd){
 25a:	46 2f       	mov	r20, r22
	send(PCD8544_cmd, cmd);
 25c:	60 e0       	ldi	r22, 0x00	; 0
 25e:	70 e0       	ldi	r23, 0x00	; 0
 260:	df df       	rcall	.-66     	; 0x220 <_ZN9Nokia51104sendEih>
 262:	08 95       	ret

00000264 <_ZN9Nokia51108sendDataEh>:
}
void Nokia5110::sendData(uint8_t data){
 264:	46 2f       	mov	r20, r22
	send(PCD8544_data, data);
 266:	61 e0       	ldi	r22, 0x01	; 1
 268:	70 e0       	ldi	r23, 0x00	; 0
 26a:	da df       	rcall	.-76     	; 0x220 <_ZN9Nokia51104sendEih>
 26c:	08 95       	ret

0000026e <_ZN9Nokia51109setCursorEhh>:
}

void Nokia5110::setCursor(uint8_t x, uint8_t y){
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	ec 01       	movw	r28, r24
	this->cursor_x = x;
 274:	68 83       	st	Y, r22
	this->cursor_y = y;
 276:	49 83       	std	Y+1, r20	; 0x01
	sendCommand(0x20);
 278:	60 e2       	ldi	r22, 0x20	; 32
 27a:	ef df       	rcall	.-34     	; 0x25a <_ZN9Nokia511011sendCommandEh>
	sendCommand(0x80 | this->cursor_x);
 27c:	68 81       	ld	r22, Y
 27e:	60 68       	ori	r22, 0x80	; 128
 280:	ce 01       	movw	r24, r28
 282:	eb df       	rcall	.-42     	; 0x25a <_ZN9Nokia511011sendCommandEh>
	sendCommand(0x40 | this->cursor_y);
 284:	69 81       	ldd	r22, Y+1	; 0x01
 286:	60 64       	ori	r22, 0x40	; 64
 288:	ce 01       	movw	r24, r28
 28a:	e7 df       	rcall	.-50     	; 0x25a <_ZN9Nokia511011sendCommandEh>
}
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <_ZN9Nokia5110C1Ev>:
Nokia5110::Nokia5110(){
 292:	fc 01       	movw	r30, r24
	this->cursor_x = 0;
 294:	10 82       	st	Z, r1
	this->cursor_y = 0;
 296:	11 82       	std	Z+1, r1	; 0x01
	this->inverse_output = false;
 298:	12 82       	std	Z+2, r1	; 0x02
	LCD_DDR |= (1 << RST) | (1 << SCE) | (1 << DC) | (1 << SDIN) | (1 << SCLK);
 29a:	87 b3       	in	r24, 0x17	; 23
 29c:	8e 66       	ori	r24, 0x6E	; 110
 29e:	87 bb       	out	0x17, r24	; 23
	LCD_PORT |= (1 << RST) | (1 << SCE);
 2a0:	88 b3       	in	r24, 0x18	; 24
 2a2:	86 60       	ori	r24, 0x06	; 6
 2a4:	88 bb       	out	0x18, r24	; 24
 2a6:	08 95       	ret

000002a8 <_ZN9Nokia51105resetEv>:
}

void Nokia5110::reset(){
	LCD_PORT |= (1 << RST) | (1 << SCE);
 2a8:	88 b3       	in	r24, 0x18	; 24
 2aa:	86 60       	ori	r24, 0x06	; 6
 2ac:	88 bb       	out	0x18, r24	; 24
	
	LCD_PORT &= ~(1 << RST);
 2ae:	c1 98       	cbi	0x18, 1	; 24
	LCD_PORT |= (1 << RST);
 2b0:	c1 9a       	sbi	0x18, 1	; 24
 2b2:	08 95       	ret

000002b4 <_ZN9Nokia511010clearSreenEv>:
}

void Nokia5110::clearSreen(){
 2b4:	0f 93       	push	r16
 2b6:	1f 93       	push	r17
 2b8:	cf 93       	push	r28
 2ba:	df 93       	push	r29
 2bc:	8c 01       	movw	r16, r24
	setCursor(0, 0);
 2be:	40 e0       	ldi	r20, 0x00	; 0
 2c0:	60 e0       	ldi	r22, 0x00	; 0
 2c2:	d5 df       	rcall	.-86     	; 0x26e <_ZN9Nokia51109setCursorEhh>
 2c4:	c8 ef       	ldi	r28, 0xF8	; 248
 2c6:	d1 e0       	ldi	r29, 0x01	; 1
	for (int i = 0; i < 504; i++)
	sendData(0x00);
 2c8:	60 e0       	ldi	r22, 0x00	; 0
 2ca:	c8 01       	movw	r24, r16
 2cc:	cb df       	rcall	.-106    	; 0x264 <_ZN9Nokia51108sendDataEh>
 2ce:	21 97       	sbiw	r28, 0x01	; 1
	LCD_PORT |= (1 << RST);
}

void Nokia5110::clearSreen(){
	setCursor(0, 0);
	for (int i = 0; i < 504; i++)
 2d0:	d9 f7       	brne	.-10     	; 0x2c8 <_ZN9Nokia511010clearSreenEv+0x14>
	sendData(0x00);
}
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	1f 91       	pop	r17
 2d8:	0f 91       	pop	r16
 2da:	08 95       	ret

000002dc <_ZN9Nokia51105beginEv>:

void Nokia5110::begin(){
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	ec 01       	movw	r28, r24
	this->reset();
 2e2:	e2 df       	rcall	.-60     	; 0x2a8 <_ZN9Nokia51105resetEv>
	
	this->sendCommand(0x21); // H = 1
 2e4:	61 e2       	ldi	r22, 0x21	; 33
 2e6:	ce 01       	movw	r24, r28
 2e8:	b8 df       	rcall	.-144    	; 0x25a <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x80 | 0x10); //VOP[6:0] = (VLCD - 3,06) / 0.06           
 2ea:	60 e9       	ldi	r22, 0x90	; 144
 2ec:	ce 01       	movw	r24, r28
 2ee:	b5 df       	rcall	.-150    	; 0x25a <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x04); // TC0
 2f0:	64 e0       	ldi	r22, 0x04	; 4
 2f2:	ce 01       	movw	r24, r28
 2f4:	b2 df       	rcall	.-156    	; 0x25a <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x14); // Bias 1:40 - 1:34
 2f6:	64 e1       	ldi	r22, 0x14	; 20
 2f8:	ce 01       	movw	r24, r28
 2fa:	af df       	rcall	.-162    	; 0x25a <_ZN9Nokia511011sendCommandEh>
	
	this->sendCommand(0x20); //H = 0
 2fc:	60 e2       	ldi	r22, 0x20	; 32
 2fe:	ce 01       	movw	r24, r28
 300:	ac df       	rcall	.-168    	; 0x25a <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x80);
 302:	60 e8       	ldi	r22, 0x80	; 128
 304:	ce 01       	movw	r24, r28
 306:	a9 df       	rcall	.-174    	; 0x25a <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x40);
 308:	60 e4       	ldi	r22, 0x40	; 64
 30a:	ce 01       	movw	r24, r28
 30c:	a6 df       	rcall	.-180    	; 0x25a <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x0C); //Normal Mode
 30e:	6c e0       	ldi	r22, 0x0C	; 12
 310:	ce 01       	movw	r24, r28
 312:	a3 df       	rcall	.-186    	; 0x25a <_ZN9Nokia511011sendCommandEh>
	
	this->clearSreen();
 314:	ce 01       	movw	r24, r28
 316:	ce df       	rcall	.-100    	; 0x2b4 <_ZN9Nokia511010clearSreenEv>
}
 318:	df 91       	pop	r29
 31a:	cf 91       	pop	r28
 31c:	08 95       	ret

0000031e <_ZN9Nokia51108sendCharEc>:
		}
		z++;
	}
}
void Nokia5110::sendChar(char data)
{
 31e:	ef 92       	push	r14
 320:	ff 92       	push	r15
 322:	0f 93       	push	r16
 324:	1f 93       	push	r17
 326:	cf 93       	push	r28
 328:	df 93       	push	r29
 32a:	7c 01       	movw	r14, r24
 32c:	70 e0       	ldi	r23, 0x00	; 0
 32e:	eb 01       	movw	r28, r22
 330:	cc 0f       	add	r28, r28
 332:	dd 1f       	adc	r29, r29
 334:	cc 0f       	add	r28, r28
 336:	dd 1f       	adc	r29, r29
 338:	6c 0f       	add	r22, r28
 33a:	7d 1f       	adc	r23, r29
 33c:	eb 01       	movw	r28, r22
 33e:	c0 54       	subi	r28, 0x40	; 64
 340:	d0 40       	sbci	r29, 0x00	; 0
	for(int i = 0; i < 5; i++)
 342:	00 e0       	ldi	r16, 0x00	; 0
 344:	10 e0       	ldi	r17, 0x00	; 0
	{
		this->sendData(CHARSET[int(data) - 0x20][i]);
 346:	69 91       	ld	r22, Y+
 348:	c7 01       	movw	r24, r14
 34a:	8c df       	rcall	.-232    	; 0x264 <_ZN9Nokia51108sendDataEh>
		z++;
	}
}
void Nokia5110::sendChar(char data)
{
	for(int i = 0; i < 5; i++)
 34c:	0f 5f       	subi	r16, 0xFF	; 255
 34e:	1f 4f       	sbci	r17, 0xFF	; 255
 350:	05 30       	cpi	r16, 0x05	; 5
 352:	11 05       	cpc	r17, r1
 354:	c1 f7       	brne	.-16     	; 0x346 <_ZN9Nokia51108sendCharEc+0x28>
	{
		this->sendData(CHARSET[int(data) - 0x20][i]);
	}
	this->sendData(0x00);
 356:	60 e0       	ldi	r22, 0x00	; 0
 358:	c7 01       	movw	r24, r14
 35a:	84 df       	rcall	.-248    	; 0x264 <_ZN9Nokia51108sendDataEh>
}
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
 360:	1f 91       	pop	r17
 362:	0f 91       	pop	r16
 364:	ff 90       	pop	r15
 366:	ef 90       	pop	r14
 368:	08 95       	ret

0000036a <__tablejump2__>:
 36a:	ee 0f       	add	r30, r30
 36c:	ff 1f       	adc	r31, r31
 36e:	05 90       	lpm	r0, Z+
 370:	f4 91       	lpm	r31, Z
 372:	e0 2d       	mov	r30, r0
 374:	09 94       	ijmp

00000376 <_exit>:
 376:	f8 94       	cli

00000378 <__stop_program>:
 378:	ff cf       	rjmp	.-2      	; 0x378 <__stop_program>
